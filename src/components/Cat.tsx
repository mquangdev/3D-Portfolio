/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Evil_Katz (https://sketchfab.com/Evil_Katz)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/an-animated-cat-aec25699660043a29595f9572149d1e8
Title: An Animated Cat
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useLoader } from "@react-three/fiber";
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";
import * as THREE from "three";
export default function Cat(props) {
  const group = useRef();
  const { animations } = useGLTF("./models/Cat.glb");
  const nodes = useLoader(GLTFLoader, "./models/Cat.glb")["nodes"];
  const materials = useLoader(GLTFLoader, "./models/Cat.glb")["materials"];
  const { actions } = useAnimations(animations, group);
  console.log(actions);
  useEffect(() => {
    actions["Take 001"]?.reset().play().fadeIn(0.5);
    return () => actions["Take 001"]?.fadeOut(0.5);
  }, []);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group
                name="RootNode_(gltf_orientation_matrix)_0"
                rotation={[-Math.PI / 2, 0, 0]}
              >
                <group name="RootNode_(model_correction_matrix)_1">
                  <group name="catfbx_2" rotation={[Math.PI / 2, 0, 0]}>
                    <group name="_3">
                      <group name="RootNode_4">
                        <group name="_5">
                          <group name="GLTF_created_0">
                            <primitive
                              object={nodes.GLTF_created_0_rootJoint}
                            />
                            <skinnedMesh
                              name="Object_12"
                              geometry={
                                (nodes.Object_12 as THREE.SkinnedMesh).geometry
                              }
                              material={materials.Material_81}
                              skeleton={
                                (nodes.Object_12 as THREE.SkinnedMesh).skeleton
                              }
                            />
                            <skinnedMesh
                              name="Object_14"
                              geometry={
                                (nodes.Object_14 as THREE.SkinnedMesh).geometry
                              }
                              material={materials.Material_105}
                              skeleton={
                                (nodes.Object_14 as THREE.SkinnedMesh).skeleton
                              }
                            />
                            <skinnedMesh
                              name="Object_16"
                              geometry={
                                (nodes.Object_16 as THREE.SkinnedMesh).geometry
                              }
                              material={materials.Material_93}
                              skeleton={
                                (nodes.Object_16 as THREE.SkinnedMesh).skeleton
                              }
                            />
                            <group name="_8" />
                            <group name="_9" />
                            <group name="_10" />
                          </group>
                        </group>
                      </group>
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("./models/Cat.glb");
